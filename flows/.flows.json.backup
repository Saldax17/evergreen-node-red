[{"id":"fd8e0cf25588ee65","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"8e3878e54788cd3f","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"9419be80151990c2","type":"ui_tab","name":"Tablero","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"d491f7581f270628","type":"postgresDB","name":"postgres@127.0.0.1:5432/postgres","throwErrors":true,"throwErrorsFieldType":"bool","host":"127.0.0.1","hostFieldType":"str","port":"5432","portFieldType":"num","database":"postgres","databaseFieldType":"str","ssl":"false","sslFieldType":"bool","max":"10","maxFieldType":"num","min":"1","minFieldType":"num","idle":"1000","idleFieldType":"num","connectionTimeout":"10000","connectionTimeoutFieldType":"num","user":"postgres","userFieldType":"str","password":"postgres","passwordFieldType":"str"},{"id":"d8039a0f92429f24","type":"postgresdb","hostname":"localhost","port":"5432","db":"postgres","ssl":false},{"id":"b96ece2752f8226c","type":"ui_group","name":"Produccion","tab":"9419be80151990c2","order":1,"disp":true,"width":"6","collapse":false,"className":""},{"id":"d2f65e1baa0eee80","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Tareas de Producción","query":"SELECT * FROM schprod.tareasdeproduccion;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":1000,"y":400,"wires":[["ab383319933213cc"]]},{"id":"ab383319933213cc","type":"function","z":"fd8e0cf25588ee65","name":"Recolectar las consultas","func":"// Inicializar un array que contendrá los resultados de todas las consultas\nlet results = global.get(\"results\") || [];\n\n// Añadir la respuesta actual (msg.payload) al array de resultados\nresults.push(msg.payload);\n\n// Guardamos los resultados actualizados en el contexto global\nglobal.set(\"results\", results);\n\n// Verificamos si ya se han recibido todas las respuestas (en este ejemplo, 5 respuestas)\nif (results.length === 5) {\n    // Convertimos cada resultado en una cadena JSON legible\n    let jsonResults = results.map(result => {\n        return JSON.stringify(result, null, 2); // Convierte cada objeto a una cadena JSON\n    });\n\n    // Asignamos el array de resultados JSON como el nuevo msg.payload\n    msg.payload = jsonResults;\n\n    // Limpiamos los resultados del contexto global para la próxima ejecución\n    global.set(\"results\", []);\n\n    // Devolvemos el mensaje con los resultados en JSON\n    return msg;\n} else {\n    // No enviamos nada hasta que tengamos todas las respuestas\n    return null;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":360,"wires":[["e6225a0a0d3add74"]]},{"id":"1883ac70f6ef3e89","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Fase Lunar","query":"SELECT * FROM schprod.faselunar;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":990,"y":500,"wires":[["ab383319933213cc"]]},{"id":"c2798bc8d948cd73","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Sensores","query":"SELECT * FROM schprod.sensores;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":1020,"y":200,"wires":[["ab383319933213cc"]]},{"id":"63f55e0e98df65b4","type":"inject","z":"fd8e0cf25588ee65","name":"Consultas","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"str","x":60,"y":380,"wires":[["0b7062625f6dd797"]]},{"id":"68a6825ee6e8643e","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Cultivos","query":"SELECT * FROM schprod.cultivos;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":1020,"y":280,"wires":[["ab383319933213cc"]]},{"id":"5a87b92203160ae9","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Condiciones Climaticas","query":"SELECT * FROM schprod.condicionesclimaticas;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":990,"y":600,"wires":[["ab383319933213cc"]]},{"id":"3d7eee8ef88efce2","type":"catch","z":"fd8e0cf25588ee65","name":"Recolectar Errores","scope":null,"uncaught":false,"x":1010,"y":680,"wires":[["38d7766e70d838e6"]]},{"id":"38d7766e70d838e6","type":"debug","z":"fd8e0cf25588ee65","name":"Errores","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1400,"y":680,"wires":[]},{"id":"a7116ae66717d40d","type":"trigger","z":"fd8e0cf25588ee65","name":"","op1":"1","op2":"0","op1type":"val","op2type":"val","duration":"250","extend":"false","overrideDelay":"false","units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":700,"y":380,"wires":[["c2798bc8d948cd73","68a6825ee6e8643e","d2f65e1baa0eee80","1883ac70f6ef3e89","5a87b92203160ae9","1d9bebda4252e6aa"]]},{"id":"e6225a0a0d3add74","type":"function","z":"fd8e0cf25588ee65","name":"Toma de decisiones","func":"// Datos recibidos desde las tablas (simulamos lo que proviene de los nodos de consulta)\nlet sensores = msg.payload[0];  // Datos de sensores (temperatura, humedad)\nlet clima = msg.payload[1];  // Datos de condiciones climáticas\nlet tareasProduccion = msg.payload[2];  // Datos de ciclo de cultivo (fase, tipo de cultivo)\nlet faseLunar = msg.payload[3];  // Fase lunar\nlet condicionesClimaticas = msg.payload[4];  // Datos de condiciones climáticas\nlet tareasPendientes = msg.payload[5];  // Consulta de tareas pendientes o en curso (verificación)\n\n// Umbrales y datos de referencia para decisiones\nlet umbralHumedad = 50;  // Umbral de humedad para riego\nlet umbralTemperatura = 30;  // Umbral de temperatura para riego\nlet umbralHumedadFertilizacion = 80;  // Umbral de humedad para fertilización después de lluvia\n\n// Resultados de las decisiones\nlet decisiones = [];\n\n// Función para verificar si ya hay una tarea pendiente o en curso\nfunction tareaYaExiste(tipoTarea) {\n    return tareasPendientes.some(tarea => tarea.tipo === tipoTarea && (tarea.estado === 'pendiente' || tarea.estado === 'en curso'));\n}\n\n// Generar un ID único para cada decisión\nlet idDecision = Math.floor(Math.random() * 100000);  // Generamos un ID de decisión\n\n// 1. Riego (Condiciones de Sensores)\nif (sensores.humedad < umbralHumedad && sensores.temperatura > umbralTemperatura) {\n    if (!tareaYaExiste(\"riego\")) {\n        decisiones.push({\n            id: idDecision++,  // Incrementamos el ID de la decisión\n            entrada: { \n                humedad: sensores.humedad, \n                temperatura: sensores.temperatura \n            },\n            resultado: \"Programar tarea de riego\",\n            tarea: tareasProduccion.id,  // ID de la tarea\n            parcela: sensores.parcela  // ID de la parcela\n        });\n    }\n}\n\n// 2. Fertilización (Condiciones Climáticas)\nif (clima.lluvioso && sensores.humedad > umbralHumedadFertilizacion) {\n    if (!tareaYaExiste(\"fertilización\")) {\n        decisiones.push({\n            id: idDecision++,\n            entrada: {\n                clima: \"lluvioso\",\n                humedad: sensores.humedad\n            },\n            resultado: \"Programar tarea de fertilización\",\n            tarea: tareasProduccion.id,\n            parcela: sensores.parcela\n        });\n    }\n}\n\n// 3. Siembra o Cosecha (Ciclo de cultivo)\nif (tareasProduccion.fase === \"siembra\" && sensores.humedad >= umbralHumedad && sensores.temperatura <= umbralTemperatura) {\n    if (!tareaYaExiste(\"siembra\")) {\n        decisiones.push({\n            id: idDecision++,\n            entrada: {\n                fase: \"siembra\",\n                humedad: sensores.humedad,\n                temperatura: sensores.temperatura\n            },\n            resultado: \"Programar tarea de siembra\",\n            tarea: tareasProduccion.id,\n            parcela: sensores.parcela\n        });\n    }\n}\n\nif (tareasProduccion.fase === \"cosecha\" && clima.temperatura <= umbralTemperatura && !clima.lluvioso) {\n    if (!tareaYaExiste(\"cosecha\")) {\n        decisiones.push({\n            id: idDecision++,\n            entrada: {\n                fase: \"cosecha\",\n                clima: \"soleado\",\n                temperatura: clima.temperatura\n            },\n            resultado: \"Programar tarea de cosecha\",\n            tarea: tareasProduccion.id,\n            parcela: sensores.parcela\n        });\n    }\n}\n\n// 4. Fase Lunar (Fertilización, Siembra o Cosecha)\nif (faseLunar === \"Luna llena\" || faseLunar === \"Cuarto creciente\") {\n    if (!tareaYaExiste(\"fertilización\") && !tareaYaExiste(\"siembra\")) {\n        decisiones.push({\n            id: idDecision++,\n            entrada: {\n                faseLunar: faseLunar\n            },\n            resultado: \"Programar tarea de fertilización o siembra\",\n            tarea: tareasProduccion.id,\n            parcela: sensores.parcela\n        });\n    }\n}\n\nif (faseLunar === \"Cuarto menguante\" && tareasProduccion.fase === \"cosecha\") {\n    if (!tareaYaExiste(\"cosecha\")) {\n        decisiones.push({\n            id: idDecision++,\n            entrada: {\n                faseLunar: faseLunar\n            },\n            resultado: \"Programar tarea de cosecha\",\n            tarea: tareasProduccion.id,\n            parcela: sensores.parcela\n        });\n    }\n}\n\n// Convertir las decisiones en un JSON para el siguiente nodo\nmsg.payload = JSON.stringify(decisiones, null, 2);\n\n// Retornamos el mensaje con el JSON de decisiones\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1540,"y":360,"wires":[["47c6fc88124c0a90"]]},{"id":"1d9bebda4252e6aa","type":"postgrestor","z":"fd8e0cf25588ee65","name":"Parcelas","query":"SELECT * FROM schprod.parcelas;","postgresDB":"d491f7581f270628","output":true,"outputs":1,"throwErrors":false,"x":1020,"y":100,"wires":[["ab383319933213cc"]]},{"id":"0b7062625f6dd797","type":"ui_text_input","z":"fd8e0cf25588ee65","name":"","label":"Ingrese el Número de Parcela","tooltip":"","group":"b96ece2752f8226c","order":0,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"topic","sendOnBlur":false,"className":"","topicType":"msg","x":310,"y":380,"wires":[["2754406a1363fbb2"]]},{"id":"47c6fc88124c0a90","type":"debug","z":"fd8e0cf25588ee65","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1820,"y":280,"wires":[]},{"id":"2754406a1363fbb2","type":"ui_button","z":"fd8e0cf25588ee65","name":"","group":"b96ece2752f8226c","order":1,"width":0,"height":0,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":530,"y":380,"wires":[["a7116ae66717d40d"]]}]